#!/usr/bin/env node
'use strict';

var program = require('commander'),
    forever = require('forever'),
    pkg = require('../package.json');

program.version(pkg.version)
    .option('--production', 'Stop ' + pkg.name + ' production Server')
    .option('--staging', 'Stop ' + pkg.name + ' staging Server')
    .parse(process.argv);

if (program.production || /-production\/?/.test(process.cwd())) {
    process.env.NODE_ENV = 'production';
} else if (program.staging || /-staging\/?/.test(process.cwd())) {
    process.env.NODE_ENV = 'staging';
}
else {
    process.env.NODE_ENV = 'development';
}

var logDir = process.cwd() + '/log';
var pidFile = process.cwd() + '/pid/' + pkg.name + '-' + process.env.NODE_ENV + '.pid';

console.log('Stoping %s Services:', pkg.name);
console.log('Current working dir: ', process.cwd());
console.log('NODE_ENV:            ', process.env.NODE_ENV);
console.log('Log dir:             ', logDir);
console.log('PID files dir:       ', pidFile);
console.log('');

if (process.env.NODE_ENV === 'production' || process.env.NODE_ENV === 'staging') {
    forever.list(false, function(err, command) {
        var numStopped = 0;

        if (command) {
            command.forEach(function(cmd, index) {
                if (cmd.cwd === process.cwd() && cmd.file === './application/' + pkg.name + '-server.js' && cmd.env === process.env.NODE_ENV) {
                    console.log('Stopping PID: ', cmd.foreverPid);
                    forever.stop(index);
                    numStopped++;
                }
            });
        }

        if (numStopped === 0) {
            console.log('No processes found!');
        }
    });
}
